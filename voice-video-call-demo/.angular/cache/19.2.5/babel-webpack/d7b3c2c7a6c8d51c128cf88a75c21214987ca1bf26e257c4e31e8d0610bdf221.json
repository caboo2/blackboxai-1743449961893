{"ast":null,"code":"import _asyncToGenerator from \"/project/sandbox/user-workspace/voice-video-call-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _CallService;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CallService {\n  constructor() {\n    this.callState = new BehaviorSubject({\n      isVideoEnabled: true,\n      isMuted: false,\n      isScreenSharing: false\n    });\n  }\n  getCallState() {\n    return this.callState.asObservable();\n  }\n  startCall(recipientId, withVideo) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // For demo purposes, just update the state\n      _this.callState.next({\n        ..._this.callState.value,\n        isVideoEnabled: withVideo\n      });\n    })();\n  }\n  toggleAudio() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.callState.next({\n        ..._this2.callState.value,\n        isMuted: !_this2.callState.value.isMuted\n      });\n    })();\n  }\n  toggleVideo() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.callState.next({\n        ..._this3.callState.value,\n        isVideoEnabled: !_this3.callState.value.isVideoEnabled\n      });\n    })();\n  }\n  switchCamera() {\n    return _asyncToGenerator(function* () {\n      // For demo purposes, no actual camera switching\n      console.log('Switching camera');\n    })();\n  }\n  toggleScreenShare() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.callState.next({\n        ..._this4.callState.value,\n        isScreenSharing: !_this4.callState.value.isScreenSharing\n      });\n    })();\n  }\n  endCall() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      _this5.callState.next({\n        isVideoEnabled: false,\n        isMuted: false,\n        isScreenSharing: false\n      });\n    })();\n  }\n}\n_CallService = CallService;\n_CallService.ɵfac = function CallService_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _CallService)();\n};\n_CallService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _CallService,\n  factory: _CallService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","CallService","constructor","callState","isVideoEnabled","isMuted","isScreenSharing","getCallState","asObservable","startCall","recipientId","withVideo","_this","_asyncToGenerator","next","value","toggleAudio","_this2","toggleVideo","_this3","switchCamera","console","log","toggleScreenShare","_this4","endCall","_this5","factory","ɵfac","providedIn"],"sources":["/project/sandbox/user-workspace/voice-video-call-demo/src/app/services/call.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface CallState {\n  isVideoEnabled: boolean;\n  isMuted: boolean;\n  isScreenSharing: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CallService {\n  private callState = new BehaviorSubject<CallState>({\n    isVideoEnabled: true,\n    isMuted: false,\n    isScreenSharing: false\n  });\n\n  constructor() {}\n\n  getCallState(): Observable<CallState> {\n    return this.callState.asObservable();\n  }\n\n  async startCall(recipientId: string, withVideo: boolean): Promise<void> {\n    // For demo purposes, just update the state\n    this.callState.next({\n      ...this.callState.value,\n      isVideoEnabled: withVideo\n    });\n  }\n\n  async toggleAudio(): Promise<void> {\n    this.callState.next({\n      ...this.callState.value,\n      isMuted: !this.callState.value.isMuted\n    });\n  }\n\n  async toggleVideo(): Promise<void> {\n    this.callState.next({\n      ...this.callState.value,\n      isVideoEnabled: !this.callState.value.isVideoEnabled\n    });\n  }\n\n  async switchCamera(): Promise<void> {\n    // For demo purposes, no actual camera switching\n    console.log('Switching camera');\n  }\n\n  async toggleScreenShare(): Promise<void> {\n    this.callState.next({\n      ...this.callState.value,\n      isScreenSharing: !this.callState.value.isScreenSharing\n    });\n  }\n\n  async endCall(): Promise<void> {\n    this.callState.next({\n      isVideoEnabled: false,\n      isMuted: false,\n      isScreenSharing: false\n    });\n  }\n}"],"mappings":";;AACA,SAASA,eAAe,QAAoB,MAAM;;AAWlD,OAAM,MAAOC,WAAW;EAOtBC,YAAA;IANQ,KAAAC,SAAS,GAAG,IAAIH,eAAe,CAAY;MACjDI,cAAc,EAAE,IAAI;MACpBC,OAAO,EAAE,KAAK;MACdC,eAAe,EAAE;KAClB,CAAC;EAEa;EAEfC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACJ,SAAS,CAACK,YAAY,EAAE;EACtC;EAEMC,SAASA,CAACC,WAAmB,EAAEC,SAAkB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACrD;MACAD,KAAI,CAACT,SAAS,CAACW,IAAI,CAAC;QAClB,GAAGF,KAAI,CAACT,SAAS,CAACY,KAAK;QACvBX,cAAc,EAAEO;OACjB,CAAC;IAAC;EACL;EAEMK,WAAWA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAJ,iBAAA;MACfI,MAAI,CAACd,SAAS,CAACW,IAAI,CAAC;QAClB,GAAGG,MAAI,CAACd,SAAS,CAACY,KAAK;QACvBV,OAAO,EAAE,CAACY,MAAI,CAACd,SAAS,CAACY,KAAK,CAACV;OAChC,CAAC;IAAC;EACL;EAEMa,WAAWA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAN,iBAAA;MACfM,MAAI,CAAChB,SAAS,CAACW,IAAI,CAAC;QAClB,GAAGK,MAAI,CAAChB,SAAS,CAACY,KAAK;QACvBX,cAAc,EAAE,CAACe,MAAI,CAAChB,SAAS,CAACY,KAAK,CAACX;OACvC,CAAC;IAAC;EACL;EAEMgB,YAAYA,CAAA;IAAA,OAAAP,iBAAA;MAChB;MACAQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAAC;EAClC;EAEMC,iBAAiBA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAX,iBAAA;MACrBW,MAAI,CAACrB,SAAS,CAACW,IAAI,CAAC;QAClB,GAAGU,MAAI,CAACrB,SAAS,CAACY,KAAK;QACvBT,eAAe,EAAE,CAACkB,MAAI,CAACrB,SAAS,CAACY,KAAK,CAACT;OACxC,CAAC;IAAC;EACL;EAEMmB,OAAOA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAb,iBAAA;MACXa,MAAI,CAACvB,SAAS,CAACW,IAAI,CAAC;QAClBV,cAAc,EAAE,KAAK;QACrBC,OAAO,EAAE,KAAK;QACdC,eAAe,EAAE;OAClB,CAAC;IAAC;EACL;;eArDWL,WAAW;;mCAAXA,YAAW;AAAA;;SAAXA,YAAW;EAAA0B,OAAA,EAAX1B,YAAW,CAAA2B,IAAA;EAAAC,UAAA,EAFV;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}